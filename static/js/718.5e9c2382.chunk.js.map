{"version":3,"file":"static/js/718.5e9c2382.chunk.js","mappings":"2LACA,EAA6B,+B,SCGhBA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAOR,EAAxC,UACE,wBAAKK,EAAMI,OAASJ,EAAMK,UAFrBL,EAAME,GADA,OAUxB,C,uJClBD,EAAyB,2BAAzB,EAAgE,8B,SC2DhE,EArDmB,WACjB,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACMC,EAASN,EAAaO,IAAI,UAAY,GACtCnB,EAAWC,EAAAA,IAEjBmB,EAAAA,EAAAA,YAAU,WACR,GAAKF,EACL,IACE,IAAMG,EAAQ,mCAAG,WAAMH,GAAN,wFACII,EAAAA,EAAAA,IAAYJ,GADhB,OACTK,EADS,OAEfR,EAAUQ,EAAKC,SAFA,2CAAH,sDAIdH,EAASH,EAGV,CAFC,MAAOO,GACPC,QAAQC,IAAI,QACb,CACF,GAAE,CAACT,IAeJ,OACE,4BACE,kBAAMU,SAXW,SAAAC,GAEnB,GADAA,EAAEC,kBACGd,EAAMe,OACT,OAAOC,MAAM,qBAEfnB,EAAgB,CAAEG,MAAAA,IAClBC,EAAS,GACV,EAIG,WACE,mBAAQf,UAAWC,EAAe8B,KAAK,SAAvC,qBAGA,kBACEC,YAAY,4BACZxB,KAAK,QACLyB,WAAS,EACTC,MAAOpB,EACPqB,SAxBa,SAAAR,GACnBZ,EAASY,EAAES,OAAOF,MACnB,EAuBOlC,UAAWC,QAGf,SAACL,EAAA,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,MAG3C,C,+LCvDDuC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,qBADE,uBACjBhB,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXF,EAAW,mCAAG,WAAMJ,GAAN,yFACFqB,EAAAA,EAAAA,IAAA,6BAAgCrB,EAAhC,YADE,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXmB,EAAU,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,iBAAoBI,IADnB,uBAChBpB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVqB,EAAO,mCAAG,WAAMD,GAAN,yFACEJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,aADF,uBACbpB,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPsB,EAAU,mCAAG,WAAMF,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBADC,uBAChBpB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/MoviesPage/MoviesPage.module.css?523c","components/pages/MoviesPage/MoviesPage.jsx","components/service/MovieService.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\"};","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className={css.moviesList}>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={location}>\n              <h2>{movie.title || movie.name}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"MoviesPage_search__OmoyJ\",\"searchBtn\":\"MoviesPage_searchBtn__ZrWjj\"};","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getSearches } from '../../service/MovieService';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const params = searchParams.get('query') || '';\n  const location = useLocation;\n\n  useEffect(() => {\n    if (!params) return;\n    try {\n      const getQuery = async params => {\n        const data = await getSearches(params);\n        setMovies(data.results);\n      };\n      getQuery(params);\n    } catch (error) {\n      console.log('Error');\n    }\n  }, [params]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      return alert('There is no query');\n    }\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button className={css.searchBtn} type=\"submit\">\n          Search\n        </button>\n        <input\n          placeholder=\"What do you want to find?\"\n          name=\"query\"\n          autoFocus\n          value={query}\n          onChange={handleChange}\n          className={css.search}\n        />\n      </form>\n      <MoviesList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'd36c76811afe64ae46b83ec8fd55864b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const getSearches = async params => {\n  const { data } = await axios.get(`search/movie?query=${params}&page=1`);\n  return data;\n};\n\nexport const getDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","title","name","useSearchParams","searchParams","setSearchParams","useState","setMovies","query","setQuery","params","get","useEffect","getQuery","getSearches","data","results","error","console","log","onSubmit","e","preventDefault","trim","alert","type","placeholder","autoFocus","value","onChange","target","axios","api_key","getTrending","getDetails","movie_id","getCast","getReviews"],"sourceRoot":""}