{"version":3,"file":"static/js/247.9c0dda9b.chunk.js","mappings":"yNAgDA,UA3Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAeA,IAXAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAQ,mCAAG,WAAMN,GAAN,wFACOO,EAAAA,EAAAA,IAAQP,GADf,OACTQ,EADS,OAEfJ,EAAYI,EAAQC,MAFL,2CAAH,sDAIdH,EAASN,EAGV,CAFC,MAAOU,GACPC,QAAQC,IAAI,QACb,CACF,GAAE,CAACZ,IACCG,EAEL,OACE,+BACE,eAAIU,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAA5D,SACGb,EAASc,KAAI,SAAAC,GAAK,OACjB,2BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cAvBzD,qHA0BUC,IAAKH,EAAMI,KACXC,MAAM,QACNC,OAAO,WAET,wBAAKN,EAAMI,QACX,wCAAgBJ,EAAMO,eAZfP,EAAMQ,GADE,OAmB1B,C,+LC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,qBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFN,EAAAA,EAAAA,IAAA,6BAAgCM,EAAhC,YADE,uBACjBH,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXI,EAAU,mCAAG,WAAMC,GAAN,yFACDR,EAAAA,EAAAA,IAAA,iBAAoBQ,IADnB,uBAChBL,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVvB,EAAO,mCAAG,WAAM4B,GAAN,yFACER,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADF,uBACbL,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPM,EAAU,mCAAG,WAAMD,GAAN,yFACDR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,oBADC,uBAChBL,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/service/MovieService.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'components/service/MovieService';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState(null);\n  const imgPlaceholder =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/1024px-No_image_available.svg.png';\n\n  useEffect(() => {\n    try {\n      const response = async movieId => {\n        const credits = await getCast(movieId);\n        setCastInfo(credits.cast);\n      };\n      response(movieId);\n    } catch (error) {\n      console.log('Error');\n    }\n  }, [movieId]);\n  if (!castInfo) return;\n\n  return (\n    <>\n      <ul style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n        {castInfo.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${actor.profile_path}`\n                  : imgPlaceholder\n              }\n              alt={actor.name}\n              width=\"130px\"\n              height=\"180px\"\n            />\n            <h2>{actor.name}</h2>\n            <h4>Character: {actor.character}</h4>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'd36c76811afe64ae46b83ec8fd55864b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const getSearches = async params => {\n  const { data } = await axios.get(`search/movie?query=${params}&page=1`);\n  return data;\n};\n\nexport const getDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","castInfo","setCastInfo","useEffect","response","getCast","credits","cast","error","console","log","style","display","flexDirection","gap","map","actor","src","profile_path","alt","name","width","height","character","id","axios","api_key","getTrending","data","results","getSearches","params","getDetails","movie_id","getReviews"],"sourceRoot":""}