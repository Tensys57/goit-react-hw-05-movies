{"version":3,"file":"static/js/186.c4c3150b.chunk.js","mappings":"yNAuCA,UAlCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,IAZAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAQ,mCAAG,WAAMN,GAAN,wFACIO,EAAAA,EAAAA,IAAWP,GADf,OACTQ,EADS,OAEfJ,EAAeI,EAAKC,SAFL,2CAAH,sDAIdH,EAASN,EAGV,CAFC,MAAOU,GACPC,QAAQC,IAAI,QACb,CACF,GAAE,CAACZ,IAECG,EAEL,OACE,gCAC0B,IAAvBA,EAAYU,SAAgB,uBAlBb,+CAmBhB,eAAIC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAA5D,SACGd,EAAYe,KAAI,SAAAC,GAAM,OACrB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADK,QAS9B,C,+LClCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,qBADE,uBACjBf,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXiB,EAAW,mCAAG,WAAMC,GAAN,yFACFJ,EAAAA,EAAAA,IAAA,6BAAgCI,EAAhC,YADE,uBACjBnB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXoB,EAAU,mCAAG,WAAMC,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,IADnB,uBAChBrB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVsB,EAAO,mCAAG,WAAMD,GAAN,yFACEN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADF,uBACbrB,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPD,EAAU,mCAAG,WAAMsB,GAAN,yFACDN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBADC,uBAChBrB,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/service/MovieService.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'components/service/MovieService';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const Placeholder = \"We don't have any reviews for this movie.\";\n\n  useEffect(() => {\n    try {\n      const response = async movieId => {\n        const data = await getReviews(movieId);\n        setReviewsInfo(data.results);\n      };\n      response(movieId);\n    } catch (error) {\n      console.log('Error');\n    }\n  }, [movieId]);\n\n  if (!reviewsInfo) return;\n\n  return (\n    <>\n      {reviewsInfo.length === 0 && <p>{Placeholder}</p>}\n      <ul style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n        {reviewsInfo.map(review => (\n          <li key={review.id}>\n            <h2>Author: {review.author}</h2>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd36c76811afe64ae46b83ec8fd55864b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const getSearches = async params => {\n  const { data } = await axios.get(`search/movie?query=${params}&page=1`);\n  return data;\n};\n\nexport const getDetails = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n"],"names":["movieId","useParams","useState","reviewsInfo","setReviewsInfo","useEffect","response","getReviews","data","results","error","console","log","length","style","display","flexDirection","gap","map","review","author","content","id","axios","api_key","getTrending","getSearches","params","getDetails","movie_id","getCast"],"sourceRoot":""}